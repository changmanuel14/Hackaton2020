import json, refrom django.db.models import Qfrom django.shortcuts import renderfrom rest_framework.views import APIViewfrom rest_framework.response import Responsefrom rest_framework.renderers import JSONRendererfrom .models import *from rest_framework import serializers#START VIEWSclass getAllPersonas(APIView):    def post(self, request):        personas = Persona.objects.all()        serializer = GetPersonas(personas, many=True)        data = json_arr(serializer)        return (data)class getAllPais(APIView):    def post(self, request):        pais = Pais.objects.all()        serializer = GetPersonas(pais, many=True)        data = json_arr(serializer)        return (data)class getAllDepartamento(APIView):    def post(self, request):        departamento = Departamento.objects.all()        serializer = GetPersonas(departamento, many=True)        data = json_arr(serializer)        return (data)class getAllMunicipio(APIView):    def post(self, request):        municipio = Municipio.objects.all()        serializer = GetPersonas(Municipio, many=True)        data = json_arr(serializer)        return (data)class getPersonaGenero(APIView):    def post(self, request):        masculino = Persona.objects.filter(genero='M')        serializer = GetPersonas(masculino, many=True)        data = json_arr(serializer)        cantidadM = len(data)        femenino = Persona.objects.filter(genero='F')        serializer = GetPersonas(femenino, many=True)        data = json_arr(serializer)        cantidadF = len(data)        result = {'Masculino': cantidadM, 'Femenino': cantidadF}        return Response(result)class getFemenino(APIView):    def post(self, request):        femenino = Persona.objects.filter(genero='F')        serializer = GetPersonas(femenino, many=True)        data = json_arr(serializer)        return (data)class getMasculino(APIView):    def post(self, request):        masculino = Persona.objects.filter(genero='M')        serializer = GetPersonas(masculino, many=True)        data = json_arr(serializer)        return (data)class getPersonasPais(APIView):    def post(self, request):        payload = request.data        pa = payload["pais"]        personas = Persona.objects.filter(pais=pa)        serializer = GetPersonas(personas, many=True)        data = json_arr(serializer)        return (data)class getPersonasEdad(APIView):    def post(self, request):        payload = request.data        ed = payload["edad"]        aux = 2020-int(ed)        personas = Persona.objects.filter(fecha_nacimiento__icontains=str(aux))        serializer = GetPersonas(personas, many=True)        data = json_arr(serializer)        return (data)class getPais(APIView):    def post(self, request):        payload = request.data        pa = payload["id"]        pais = Pais.objects.filter(id=pa)        serializer = GetPersonas(pais, many=False)        data = json_arr(serializer)        return (data)class getDepartamento(APIView):    def post(self, request):        payload = request.data        de = payload["id"]        dep = Departamento.objects.filter(id=de)        serializer = GetPersonas(dep, many=False)        data = json_arr(serializer)        return (data)class getMunicipio(APIView):    def post(self, request):        payload = request.data        mu = payload["id"]        mun = Municipio.objects.filter(id=mu)        serializer = GetPersonas(mun, many=False)        data = json_arr(serializer)        return (data)class NewPersona(APIView):    def post(self, request):        result = {'message': 'SUCCESS'}        payload = request.data        nombre = payload["nombre"]        apellido = payload["apellido"]        fecha_nacimiento = payload["fecha_nacimiento"]        pais = payload["pais"]        departamento = payload["departamento"]        municipio = payload["municipio"]        sintomas = payload["sintomas"]        persona = Persona(nombre=nombre, apellido=apellido, fecha_nacimiento= fecha_nacimiento, pais=pais, departamento=departamento, municipio=municipio, sintomas=sintomas)        persona.save()        return (result)class GetPersonas(serializers.ModelSerializer):    class Meta:        model = Persona        fields = '__all__'class GetPais(serializers.ModelSerializer):    class Meta:        model = Pais        fields = '__all__'class GetMunicipio(serializers.ModelSerializer):    class Meta:        model = Municipio        fields = '__all__'class GetDepartamento(serializers.ModelSerializer):    class Meta:        model = Departamento        fields = '__all__'#END VIEWSdef json_arr(serializer):    return json.loads(JSONRenderer().render(serializer.data))